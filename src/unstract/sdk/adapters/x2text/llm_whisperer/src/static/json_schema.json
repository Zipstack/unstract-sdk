{
  "title": "LLM Whisperer X2Text",
  "type": "object",
  "required": [
    "adapter_name",
    "unstract_key",
    "url"
  ],
  "properties": {
    "adapter_name": {
      "type": "string",
      "title": "Name",
      "default": "",
      "description": "Provide a unique name for this adapter instance. Example: LLM Whisperer 1"
    },
    "url": {
      "type": "string",
      "title": "URL",
      "format": "uri",
      "default": "https://llmwhisperer-api.unstract.com",
      "description": "Provide the URL of the LLM Whisperer service. Please note that this version of LLM Whisperer is deprecated."
    },
    "unstract_key": {
      "type": "string",
      "title": "Unstract Key",
      "format": "password",
      "description": "API key obtained from the Unstract developer portal (https://unstract-api-resource.developer.azure-api.net)"
    },
    "mode": {
      "type": "string",
      "title": "Mode",
      "enum": [
        "native_text",
        "low_cost",
        "high_quality",
        "form"
      ],
      "default": "form",
      "description": "Native text : Extracts text from PDF without OCR. This is very fast and cost effective. Use this mode if you are sure all your PDFs are native text pdfs (not scanned documents). Note that some scanned PDFs are \"searchable\" PDFs. Use the OCR modes for these PDFs as the quality of text in these documents are often poor. \n Low cost : Extracts text from scanned and native PDFs, images and office documents. This OCR mode cannot handle handwriting and low quality scanned pdfs and images. \n High quality : Extracts text from scanned and native PDFs, images and office documents. This OCR mode can handle handwriting and low quality scanned pdfs and images. \n Form:  Extracts text from scanned and native PDFs, images and office documents. This OCR mode can handle handwriting and low quality scanned pdfs and images. Can also extract information about checkboxes and radio button"
    },
    "output_mode": {
      "type": "string",
      "title": "Output Mode",
      "enum": [
        "line-printer",
        "dump-text",
        "text"
      ],
      "default": "line-printer",
      "description": "The output format. Valid options are line-printer, dump-text and text. The line-printer mode tries to maintain the layout of the original text and works very well as inputs to LLMs. dump-text just dumps each page as paragraphs. text extracts text into groups as it sees in the original page. text and dump-text are treated as same in ocr processing mode."
    },

    "line_splitter_tolerance": {
      "type": "number",
      "title": "Line Splitter Tolerance",
      "default": 0.4,
      "description": "Reduce this value to split lines less often, increase to split lines more often. Useful when PDFs have multi column layout with text in each column that is not aligned."
    },
    "horizontal_stretch_factor": {
      "type": "number",
      "title": "Horizontal Stretch Factor",
      "default": 1.0,
      "description": "Increase this value to stretch text horizontally, decrease to compress text horizontally. Useful when multi column text merge with each other."
    },
    "pages_to_extract": {
      "type": "string",
      "title": "Page number(s) or range to extract",
      "default": "",
      "pattern": "^(\\s*\\d+-\\d+|\\s*\\d+-|\\s*\\d+|^$)(,\\d+-\\d+|,\\d+-|,\\d+)*$",
      "description": "Specify the range of pages to extract (e.g., 1-5, 7, 10-12, 50-). Leave it empty to extract all pages."
    },
    "page_seperator": {
      "type": "string",
      "title": "Page separator",
      "default": "<<< >>>",
      "description": "Specify a pattern to separate the pages in the document (e.g., <<< {{page_no}} >>>, <<< >>>). This pattern will be inserted at the end of every page. Omit {{page_no}} if you don't want to include the page number in the separator."
    }
  },
  "if": {
    "anyOf": [
      {
        "properties": {
          "mode": {
            "const": "low_cost"
          }
        }
      },
      {
        "properties": {
          "mode": {
            "const": "high_quality"
          }
        }
      },
      {
        "properties": {
          "mode": {
            "const": "form"
          }
        }
      }
    ]
  },
  "then": {
    "properties": {
      "median_filter_size": {
        "type": "integer",
        "title": "Median Filter Size",
        "default": 0,
        "description": "The size of the median filter to use for pre-processing the image during OCR based extraction. Useful to eliminate scanning artifacts and low quality JPEG artifacts. Default is 0 if the value is not explicitly set. Available only in the Enterprise version."
      },
      "gaussian_blur_radius": {
        "type": "number",
        "title": "Gaussian Blur Radius",
        "default": 0.0,
        "description": "The radius of the gaussian blur to use for pre-processing the image during OCR based extraction. Useful to eliminate noise from the image. Default is 0.0 if the value is not explicitly set. Available only in the Enterprise version."
      },
      "mark_vertical_lines": {
        "type": "boolean",
        "title": "Mark Vertical Lines",
        "default": false,
        "description": "Detect vertical lines in the document and replicate the same using text (using \"|\" symbol). Use this for displaying tables with borders."
      },
      "mark_horizontal_lines": {
        "type": "boolean",
        "title": "Mark Horizontal Lines",
        "default": false,
        "description": "Detect horizontal lines in the document and replicate the same using text (using \"-\" symbol). Use this for displaying tables with borders and other horizontal serperators found in the document."
      }
    },
    "required": [
      "median_filter_size",
      "gaussian_blur_radius"
    ]
  }
}
